@using Anthology.Data.DB
@inject ISnackbar Snackbar
@inject Anthology.Services.IBookService bookService

<MudDialog DisableSidePadding="true">
    <TitleContent>
        <MudText Typo="Typo.h4">Match @matchSource</MudText>
    </TitleContent>
    <DialogContent>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">@book.Title</MudText>
                    <MudText Typo="Typo.h6">@book.ISBN</MudText>
                    <MudText Typo="Typo.body1">@String.Join(", ", book.Authors.Select(a => a.Name))</MudText>
                    <MudText Typo="Typo.body1">@book.ReadarrMatch().seriesTitle</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Dark" @onclick="@(() => SetNone())">None</MudButton>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudContainer MaxWidth="MaxWidth.False" Style="overflow-x: scroll">
                    <MudStack Row="true">
                        @foreach (var match in book.Matches(matchSource))
                        {
                            <MudCard Style="width: 300px;flex-shrink: 0;">
                                <MudCardMedia Image="@match.Image" Height="300" />
                                <MudCardContent>
                                    <MudText Typo="Typo.h5">@match.Title</MudText>
                                    <MudText Typo="Typo.h6">@match.Identifier</MudText>
                                    <MudText Typo="Typo.body1">@match.Authors</MudText>
                                    <MudText Typo="Typo.body1">@match.Series</MudText>
                                </MudCardContent>
                                <MudCardActions>
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="@(() => Match(match.Identifier))">Select Match</MudButton>
                                </MudCardActions>
                            </MudCard>
                        }
                    </MudStack>
                </MudContainer>
            </MudCardContent>
        </MudCard>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    
    [Parameter] public Book book { get; set; } = new Book();
    [Parameter] public string matchSource { get; set; }

    void Cancel() => MudDialog.Cancel();

    protected async Task Match(string bookIdentifier)
    {
        if (matchSource == "Audible") book.ASIN = bookIdentifier;
        if (matchSource == "AudiobookGuild") book.AGID = bookIdentifier;
        bookService.SaveBook(book);
        Snackbar.Add("Book Matched.", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }

    protected async Task SetNone()
    {
        if (matchSource == "Audible") book.AudibleExists = false;
        if (matchSource == "AudiobookGuild") book.AudiobookGuildExists = false;
        bookService.SaveBook(book);
        Snackbar.Add("Book Matched.", Severity.Success);
    }
}
